{"ast":null,"code":"var _jsxFileName = \"/Users/victorkabagema/Documents/GitHub/hulu-clone/hulu-clone/src/Results.js\";\nimport React, { useEffect, useState } from 'react';\nimport './Results.css';\nimport VideoCard from './VideoCard';\nimport axios from './axios';\nimport FlipMove from \"react-flip-move\";\n\nfunction Results({\n  selectedOption\n}) {\n  const [movies, setMovies] = useState([]); //  run this code EVERY time the results components loads/mounts\n\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(selectedOption);\n      setMovies(request.data.results);\n      return request;\n    }\n\n    fetchData();\n  }, [selectedOption]); // depedency on selectedOption\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"results\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FlipMove, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, movies.map(movie => /*#__PURE__*/React.createElement(VideoCard, {\n    key: movie.id,\n    movie: movie,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }\n  }))));\n}\n\nexport default Results;","map":{"version":3,"sources":["/Users/victorkabagema/Documents/GitHub/hulu-clone/hulu-clone/src/Results.js"],"names":["React","useEffect","useState","VideoCard","axios","FlipMove","Results","selectedOption","movies","setMovies","fetchData","request","get","data","results","map","movie","id"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAyBC,QAAzB,QAAyC,OAAzC;AACA,OAAO,eAAP;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,QAAP,MAAqB,iBAArB;;AACA,SAASC,OAAT,CAAiB;AAAEC,EAAAA;AAAF,CAAjB,EAAqC;AACjC,QAAK,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAAnC,CADiC,CAGrC;;AACID,EAAAA,SAAS,CAAC,MAAK;AACX,mBAAeS,SAAf,GAA2B;AACvB,YAAMC,OAAO,GAAG,MAAMP,KAAK,CAACQ,GAAN,CAAUL,cAAV,CAAtB;AAEAE,MAAAA,SAAS,CAACE,OAAO,CAACE,IAAR,CAAaC,OAAd,CAAT;AACA,aAAOH,OAAP;AACH;;AACDD,IAAAA,SAAS;AACZ,GARQ,EAQP,CAACH,cAAD,CARO,CAAT,CAJiC,CAYb;;AAEpB,sBACI;AAAK,IAAA,SAAS,EAAG,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,MAAM,CAACO,GAAP,CAAYC,KAAD,iBACR,oBAAC,SAAD;AAAW,IAAA,GAAG,EAAEA,KAAK,CAACC,EAAtB;AAA0B,IAAA,KAAK,EAAED,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CADL,CADJ,CADJ;AAUH;;AAED,eAAeV,OAAf","sourcesContent":["import React,{useEffect, useState } from 'react'\nimport './Results.css'\nimport VideoCard from './VideoCard';\nimport axios from './axios';\nimport FlipMove from \"react-flip-move\";\nfunction Results({ selectedOption }) {\n    const[movies, setMovies] = useState([]);\n\n//  run this code EVERY time the results components loads/mounts\n    useEffect(()=> {\n        async function fetchData() {\n            const request = await axios.get(selectedOption);\n            \n            setMovies(request.data.results);\n            return request;\n        }\n        fetchData();\n    },[selectedOption]) // depedency on selectedOption\n\n    return (\n        <div className = \"results\">\n            <FlipMove>\n                {movies.map((movie) =>(\n                    <VideoCard key={movie.id} movie={movie} />\n                ))} \n            </FlipMove>\n             \n        </div>\n    )\n}\n\nexport default Results\n"]},"metadata":{},"sourceType":"module"}